version: "3.8"
services:
  mysql:
    image: mysql:8.0
    networks:
      - ecommerce_network
    environment:
      - MYSQL_ROOT_PASSWORD=1234
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql_data:/var/lib/mysql
  
  redis:
    image: redis
    networks:
      - ecommerce_network
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis_data:/data


  zookeeper:
    image: 'arm64v8/zookeeper:3.8'
    networks:
      - ecommerce_network
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_TLS_CLIENT_AUTH=none
      - ZOO_TLS_QUORUM_CLIENT_AUTH=none

  kafka:
    image: 'bitnami/kafka:3.4.0'
    ports:
      - '9092:9092'
    networks:
      - ecommerce_network
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=LC://kafka:29092,LX://kafka:9092,CONTROLLER://:9093 # CONTROLLER 추가
      - KAFKA_CFG_ADVERTISED_LISTENERS=LC://kafka:29092,LX://${DOCKER_HOST_IP:-localhost}:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=LC:PLAINTEXT,LX:PLAINTEXT,CONTROLLER:PLAINTEXT # CONTROLLER 추가
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=LC
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka_data:/var/lib/kafka/data

  kafka-ui:
    image: provectuslabs/kafka-ui
    networks:
      - ecommerce_network
    container_name: kafka-ui
    ports:
      - "8989:8080"
    restart: always
    depends_on:
      - kafka
      - zookeeper
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - ecommerce_network

#  ecommerce:
#    image: e-commerce:0.0.2
#    networks:
#      - ecommerce_network
#    ports:
#      - "8080:8080"
#    depends_on:
#      - mysql
#      - redis

networks:
  ecommerce_network:
    driver: bridge
